{"version":3,"sources":["actions/logActions.js","actions/types.js","componets/layouts/SearchBar.jsx","componets/logs/LogItem.jsx","componets/layouts/PreLoader.jsx","componets/logs/Logs.jsx","componets/layouts/AddBtn.jsx","actions/techActions.js","componets/techs/TechSelectOptions.jsx","componets/logs/AddLogsModal.jsx","componets/logs/EditLogModal.jsx","componets/techs/AddTechModal.jsx","componets/techs/TechListItem.jsx","componets/techs/TechListModal.jsx","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","required","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","M","toast","html","PreLoader","state","getLogs","logs","loading","useEffect","length","map","key","AddButton","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","date","Date","updateLog","updLog","addTechs","setFirstName","setLastName","deleteTech","INITIAL_STATE","error","initialState","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","AddBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48f19923.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from './types';\r\n\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from './../../actions/logActions';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              required\r\n              placeholder='Search Logs...'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from './../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          } `}\r\n          onClick={() => setCurrent(log)}>\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by:\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY h:mm:ss a' />\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from 'react';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport PreLoader from './../layouts/PreLoader';\r\nimport { PropTypes } from 'prop-types';\r\nimport { getLogs } from './../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <PreLoader />;\r\n  }\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No Logs To Show....</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem key={log.id} log={log} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\n\r\nconst AddButton = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'>\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'>\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from './types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/techs');\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTechs = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((t) => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { addLog } from '../../actions/logActions';\r\nimport TechSelectOptions from './../techs/TechSelectOptions';\r\n\r\nconst AddLogsModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === ' ' || tech === '') {\r\n      M.toast({ html: 'Please Enter a Message Or a Technician' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLog(newLog);\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}>\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-blue btn blue '>\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogsModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { updateLog } from '../../actions/logActions';\r\nimport TechSelectOptions from './../techs/TechSelectOptions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === ' ' || tech === '') {\r\n      M.toast({ html: 'Please Enter a Message Or a Technician' });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log Update by ${tech}` });\r\n\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Edit System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}>\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-blue btn blue '>\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { addTechs } from '../../actions/techActions';\r\n\r\nconst AddTechModal = ({ addTechs }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter a first and last name' });\r\n    } else {\r\n      addTechs({\r\n        firstName,\r\n        lastName,\r\n      });\r\n      M.toast({ html: `${firstName} ${lastName} was added as a technician` });\r\n\r\n      // Clear Fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue btn'>\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%',\r\n};\r\n\r\nexport default connect(null, { addTechs })(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechListItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechListItem);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechListItem from './TechListItem';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from './../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechListItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n//export default TechListModal;\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport SearchBar from './componets/layouts/SearchBar';\nimport Logs from './componets/logs/Logs';\nimport AddBtn from './componets/layouts/AddBtn';\nimport AddLogsModal from './componets/logs/AddLogsModal';\nimport EditLogModal from './componets/logs/EditLogModal';\n\nimport './App.css';\nimport AddTechModal from './componets/techs/AddTechModal';\nimport TechListModal from './componets/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  useEffect(() => {\n    //Init materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogsModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}